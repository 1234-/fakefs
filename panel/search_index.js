var search_data = {"index":{"searchIndex":["fakefs","dir","fakedir","fakefile","inode","fakesymlink","file","stat","filesystem","filetest","fileutils","spechelpers","version","object","fakefs()","[]()","_check_for_valid_file()","activate!()","add()","atime()","autoclose?()","basename()","binmode?()","cd()","chdir()","chdir()","chdir()","chmod()","chown()","chown()","chown_r()","chroot()","clear()","clone()","clone()","clone()","clone()","close()","close_on_exec=()","close_on_exec?()","const_missing()","content()","content=()","cp()","cp_r()","ctime()","ctime()","current_dir()","deactivate!()","delete()","delete()","delete()","delete()","delete()","delete()","dir_levels()","directory?()","directory?()","directory?()","dirname()","each()","entries()","entry()","entry()","entry()","exist?()","exist?()","exists?()","exists?()","expand_path()","extended()","extname()","file?()","file?()","files()","find()","flock()","foreach()","fs()","glob()","included()","inspect()","inspect()","inspect()","ioctl()","join()","link()","link()","link()","links()","ln_s()","ln_sf()","lstat()","lstat()","makedirs()","mkdir()","mkdir()","mkdir_p()","mkpath()","mktmpdir()","mtime()","mtime()","mv()","new()","new()","new()","new()","new()","new()","new()","nlink()","normalize_path()","open()","path()","path_parts()","pos()","pos=()","pwd()","read()","read()","read_nonblock()","readlines()","readlink()","readpartial()","rename()","respond_to?()","rewind()","rm()","rm_f()","rm_r()","rm_rf()","rmdir()","seek()","size()","size()","size()","size?()","split()","stat()","stat()","symlink()","symlink?()","symlink?()","sysseek()","tmpdir()","to_io()","to_path()","to_s()","to_s()","to_s()","to_s()","touch()","unlink()","use_fakefs()","utime()","write_nonblock()","contributors","license","readme.markdown","fakefs.rb","base.rb","dir.rb","dir.rb","file.rb","symlink.rb","file.rb","file_system.rb","file_test.rb","fileutils.rb","safe.rb","spec_helpers.rb","version.rb"],"longSearchIndex":["lib/fakefs/version.rb","fakefs","fakefs","fakefs","fakefs::fakefile","fakefs","fakefs","fakefs::file","fakefs","fakefs","fakefs","fakefs","fakefs","lib/fakefs/base.rb","object","fakefs::dir","fakefs::dir","fakefs","fakefs::filesystem","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::fileutils","fakefs::dir","fakefs::filesystem","fakefs::fileutils","fakefs::file","fakefs::file","fakefs::fileutils","fakefs::fileutils","fakefs::dir","fakefs::filesystem","fakefs::fakedir","fakefs::fakefile","fakefs::fakefile::inode","fakefs::filesystem","fakefs::dir","fakefs::file","fakefs::file","fakefs::file","fakefs::fakefile","fakefs::fakefile","fakefs::fileutils","fakefs::fileutils","fakefs::file","fakefs::file","fakefs::filesystem","fakefs","fakefs::dir","fakefs::fakedir","fakefs::fakefile","fakefs::fakesymlink","fakefs::file","fakefs::filesystem","fakefs::filesystem","fakefs::file","fakefs::file::stat","fakefs::filetest","fakefs::file","fakefs::dir","fakefs::dir","fakefs::fakedir","fakefs::fakefile","fakefs::fakesymlink","fakefs::file","fakefs::filetest","fakefs::dir","fakefs::file","fakefs::file","fakefs::spechelpers","fakefs::file","fakefs::file","fakefs::filetest","fakefs::filesystem","fakefs::filesystem","fakefs::file","fakefs::dir","fakefs::filesystem","fakefs::dir","fakefs::spechelpers","fakefs::fakedir","fakefs::fakefile","fakefs::fakesymlink","fakefs::file","fakefs::file","fakefs::fakefile","fakefs::fakefile::inode","fakefs::file","fakefs::fakefile","fakefs::fileutils","fakefs::fileutils","fakefs::file","fakefs::file","fakefs::fileutils","fakefs::dir","fakefs::fileutils","fakefs::fileutils","fakefs::fileutils","fakefs::dir","fakefs::file","fakefs::file","fakefs::fileutils","fakefs::dir","fakefs::fakedir","fakefs::fakefile","fakefs::fakefile::inode","fakefs::fakesymlink","fakefs::file","fakefs::file::stat","fakefs::file::stat","fakefs::filesystem","fakefs::dir","fakefs::dir","fakefs::filesystem","fakefs::dir","fakefs::dir","fakefs::dir","fakefs::dir","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::fakesymlink","fakefs::dir","fakefs::fileutils","fakefs::fileutils","fakefs::fileutils","fakefs::fileutils","fakefs::fileutils","fakefs::dir","fakefs::file","fakefs::file","fakefs::file::stat","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::file","fakefs::file::stat","fakefs::file","fakefs::dir","fakefs::file","fakefs::file","fakefs::fakedir","fakefs::fakefile","fakefs::fakesymlink","fakefs::version","fakefs::fileutils","fakefs::fakefile::inode","fakefs::spechelpers","fakefs::file","fakefs::file","files/contributors.html","files/license.html","files/readme_markdown.html","files/lib/fakefs_rb.html","files/lib/fakefs/base_rb.html","files/lib/fakefs/dir_rb.html","files/lib/fakefs/fake/dir_rb.html","files/lib/fakefs/fake/file_rb.html","files/lib/fakefs/fake/symlink_rb.html","files/lib/fakefs/file_rb.html","files/lib/fakefs/file_system_rb.html","files/lib/fakefs/file_test_rb.html","files/lib/fakefs/fileutils_rb.html","files/lib/fakefs/safe_rb.html","files/lib/fakefs/spec_helpers_rb.html","files/lib/fakefs/version_rb.html"],"info":[["FakeFS","lib/fakefs/base.rb","classes/FakeFS.html"," < ","",1],["Dir","FakeFS","classes/FakeFS/Dir.html"," < Object","",1],["FakeDir","FakeFS","classes/FakeFS/FakeDir.html"," < Hash","",1],["FakeFile","FakeFS","classes/FakeFS/FakeFile.html"," < Object","",1],["Inode","FakeFS::FakeFile","classes/FakeFS/FakeFile/Inode.html"," < Object","",1],["FakeSymlink","FakeFS","classes/FakeFS/FakeSymlink.html"," < Object","",1],["File","FakeFS","classes/FakeFS/File.html"," < StringIO","",1],["Stat","FakeFS::File","classes/FakeFS/File/Stat.html"," < Object","",1],["FileSystem","FakeFS","classes/FakeFS/FileSystem.html"," < ","",1],["FileTest","FakeFS","classes/FakeFS/FileTest.html"," < Object","",1],["FileUtils","FakeFS","classes/FakeFS/FileUtils.html"," < ","",1],["SpecHelpers","FakeFS","classes/FakeFS/SpecHelpers.html"," < ","",1],["Version","FakeFS","classes/FakeFS/Version.html"," < ","",1],["Object","lib/fakefs/base.rb","classes/Object.html"," < Object","",1],["FakeFS","Object","classes/Object.html#M000002","()","",2],["[]","FakeFS::Dir","classes/FakeFS/Dir.html#M000016","(pattern)","",2],["_check_for_valid_file","FakeFS::Dir","classes/FakeFS/Dir.html#M000003","(path)","",2],["activate!","FakeFS","classes/FakeFS.html#M000000","()","",2],["add","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000067","(path, object=FakeDir.new)","",2],["atime","FakeFS::File","classes/FakeFS/File.html#M000115","()","",2],["autoclose?","FakeFS::File","classes/FakeFS/File.html#M000125","()","",2],["basename","FakeFS::File","classes/FakeFS/File.html#M000073","(*args)","",2],["binmode?","FakeFS::File","classes/FakeFS/File.html#M000121","()","",2],["cd","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000145","(dir)","",2],["chdir","FakeFS::Dir","classes/FakeFS/Dir.html#M000018","(dir, &blk)","",2],["chdir","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000076","(dir, &blk)","",2],["chdir","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000149","(dir)","Alias for #cd",2],["chmod","FakeFS::File","classes/FakeFS/File.html#M000116","(mode_int)","",2],["chown","FakeFS::File","classes/FakeFS/File.html#M000117","(owner_int, group_int)","",2],["chown","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000142","(user, group, list, options={})","",2],["chown_R","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000143","(user, group, list, options={})","",2],["chroot","FakeFS::Dir","classes/FakeFS/Dir.html#M000019","(string)","",2],["clear","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000061","()","",2],["clone","FakeFS::FakeDir","classes/FakeFS/FakeDir.html#M000022","(parent = nil)","",2],["clone","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000039","(parent = nil)","",2],["clone","FakeFS::FakeFile::Inode","classes/FakeFS/FakeFile/Inode.html#M000029","()","",2],["clone","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000068","(path)","copies directories and files from the real filesystem into our fake one ",2],["close","FakeFS::Dir","classes/FakeFS/Dir.html#M000005","()","",2],["close_on_exec=","FakeFS::File","classes/FakeFS/File.html#M000122","(bool)","",2],["close_on_exec?","FakeFS::File","classes/FakeFS/File.html#M000123","()","",2],["const_missing","FakeFS::File","classes/FakeFS/File.html#M000066","(name)","",2],["content","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000031","()","",2],["content=","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000036","(str)","",2],["cp","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000134","(src, dest)","",2],["cp_r","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000140","(src, dest)","",2],["ctime","FakeFS::File","classes/FakeFS/File.html#M000058","(path)","",2],["ctime","FakeFS::File","classes/FakeFS/File.html#M000118","()","",2],["current_dir","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000085","()","",2],["deactivate!","FakeFS","classes/FakeFS.html#M000001","()","",2],["delete","FakeFS::Dir","classes/FakeFS/Dir.html#M000020","(string)","",2],["delete","FakeFS::FakeDir","classes/FakeFS/FakeDir.html#M000024","(node = self)","",2],["delete","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000043","()","",2],["delete","FakeFS::FakeSymlink","classes/FakeFS/FakeSymlink.html#M000049","()","",2],["delete","FakeFS::File","classes/FakeFS/File.html#M000084","(file_name, *additional_file_names)","",2],["delete","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000075","(path)","",2],["dir_levels","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000056","()","",2],["directory?","FakeFS::File","classes/FakeFS/File.html#M000069","(path)","",2],["directory?","FakeFS::File::Stat","classes/FakeFS/File/Stat.html#M000094","()","",2],["directory?","FakeFS::FileTest","classes/FakeFS/FileTest.html#M000099","(file_name)","",2],["dirname","FakeFS::File","classes/FakeFS/File.html#M000074","(path)","",2],["each","FakeFS::Dir","classes/FakeFS/Dir.html#M000006","(&block)","",2],["entries","FakeFS::Dir","classes/FakeFS/Dir.html#M000021","(dirname)","",2],["entry","FakeFS::FakeDir","classes/FakeFS/FakeDir.html#M000013","()","",2],["entry","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000040","()","",2],["entry","FakeFS::FakeSymlink","classes/FakeFS/FakeSymlink.html#M000048","()","",2],["exist?","FakeFS::File","classes/FakeFS/File.html#M000055","(path)","",2],["exist?","FakeFS::FileTest","classes/FakeFS/FileTest.html#M000098","(file_name)","",2],["exists?","FakeFS::Dir","classes/FakeFS/Dir.html#M000017","(path)","",2],["exists?","FakeFS::File","classes/FakeFS/File.html#M000101","()","",2],["expand_path","FakeFS::File","classes/FakeFS/File.html#M000072","(*args)","",2],["extended","FakeFS::SpecHelpers","classes/FakeFS/SpecHelpers.html#M000146","(example_group)","",2],["extname","FakeFS::File","classes/FakeFS/File.html#M000053","(path)","",2],["file?","FakeFS::File","classes/FakeFS/File.html#M000071","(path)","",2],["file?","FakeFS::FileTest","classes/FakeFS/FileTest.html#M000100","(file_name)","",2],["files","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000062","()","",2],["find","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000063","(path)","",2],["flock","FakeFS::File","classes/FakeFS/File.html#M000119","(locking_constant)","",2],["foreach","FakeFS::Dir","classes/FakeFS/Dir.html#M000025","(dirname, &block)","",2],["fs","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000060","()","",2],["glob","FakeFS::Dir","classes/FakeFS/Dir.html#M000032","(pattern, &block)","",2],["included","FakeFS::SpecHelpers","classes/FakeFS/SpecHelpers.html#M000147","(example_group)","",2],["inspect","FakeFS::FakeDir","classes/FakeFS/FakeDir.html#M000014","()","",2],["inspect","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000041","()","",2],["inspect","FakeFS::FakeSymlink","classes/FakeFS/FakeSymlink.html#M000047","()","",2],["ioctl","FakeFS::File","classes/FakeFS/File.html#M000102","(integer_cmd, arg)","",2],["join","FakeFS::File","classes/FakeFS/File.html#M000054","(*parts)","",2],["link","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000038","(other_file)","",2],["link","FakeFS::FakeFile::Inode","classes/FakeFS/FakeFile/Inode.html#M000027","(file)","",2],["link","FakeFS::File","classes/FakeFS/File.html#M000083","(source, dest)","",2],["links","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000037","()","",2],["ln_s","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000131","(target, path, options = {})","",2],["ln_sf","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000133","(target, path)","",2],["lstat","FakeFS::File","classes/FakeFS/File.html#M000089","(file)","",2],["lstat","FakeFS::File","classes/FakeFS/File.html#M000105","()","",2],["makedirs","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000112","(path, options = {})","Alias for #mkdir_p",2],["mkdir","FakeFS::Dir","classes/FakeFS/Dir.html#M000033","(string, integer = 0)","",2],["mkdir","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000113","(path)","",2],["mkdir_p","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000110","(path, options = {})","",2],["mkpath","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000111","(path, options = {})","Alias for #mkdir_p",2],["mktmpdir","FakeFS::Dir","classes/FakeFS/Dir.html#M000045","(prefix_suffix = nil, tmpdir = nil)","This code has been borrowed from Rubinius ",2],["mtime","FakeFS::File","classes/FakeFS/File.html#M000057","(path)","",2],["mtime","FakeFS::File","classes/FakeFS/File.html#M000120","()","",2],["mv","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000141","(src, dest, options={})","",2],["new","FakeFS::Dir","classes/FakeFS/Dir.html#M000004","(string)","",2],["new","FakeFS::FakeDir","classes/FakeFS/FakeDir.html#M000012","(name = nil, parent = nil)","",2],["new","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000030","(name = nil, parent = nil)","",2],["new","FakeFS::FakeFile::Inode","classes/FakeFS/FakeFile/Inode.html#M000026","(file_owner)","",2],["new","FakeFS::FakeSymlink","classes/FakeFS/FakeSymlink.html#M000046","(target)","",2],["new","FakeFS::File","classes/FakeFS/File.html#M000097","(path, mode = READ_ONLY, perm = nil)","",2],["new","FakeFS::File::Stat","classes/FakeFS/File/Stat.html#M000091","(file, __lstat = false)","",2],["nlink","FakeFS::File::Stat","classes/FakeFS/File/Stat.html#M000095","()","",2],["normalize_path","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000082","(path)","",2],["open","FakeFS::Dir","classes/FakeFS/Dir.html#M000034","(string, &block)","",2],["path","FakeFS::Dir","classes/FakeFS/Dir.html#M000007","()","",2],["path_parts","FakeFS::FileSystem","classes/FakeFS/FileSystem.html#M000077","(path)","",2],["pos","FakeFS::Dir","classes/FakeFS/Dir.html#M000008","()","",2],["pos=","FakeFS::Dir","classes/FakeFS/Dir.html#M000009","(integer)","",2],["pwd","FakeFS::Dir","classes/FakeFS/Dir.html#M000044","()","",2],["read","FakeFS::Dir","classes/FakeFS/Dir.html#M000010","()","",2],["read","FakeFS::File","classes/FakeFS/File.html#M000079","(path)","",2],["read_nonblock","FakeFS::File","classes/FakeFS/File.html#M000103","(maxlen, outbuf = nil)","",2],["readlines","FakeFS::File","classes/FakeFS/File.html#M000080","(path)","",2],["readlink","FakeFS::File","classes/FakeFS/File.html#M000078","(path)","",2],["readpartial","FakeFS::File","classes/FakeFS/File.html#M000109","(maxlen, outbuf = nil)","",2],["rename","FakeFS::File","classes/FakeFS/File.html#M000081","(source, dest)","",2],["respond_to?","FakeFS::FakeSymlink","classes/FakeFS/FakeSymlink.html#M000051","(method)","",2],["rewind","FakeFS::Dir","classes/FakeFS/Dir.html#M000011","()","",2],["rm","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000127","(list, options = {})","",2],["rm_f","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000130","(list, options = {})","Alias for #rm",2],["rm_r","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000129","(list, options = {})","Alias for #rm",2],["rm_rf","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000128","(list, options = {})","Alias for #rm",2],["rmdir","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000114","(list, options = {})","",2],["seek","FakeFS::Dir","classes/FakeFS/Dir.html#M000015","(integer)","",2],["size","FakeFS::File","classes/FakeFS/File.html#M000126","()","",2],["size","FakeFS::File","classes/FakeFS/File.html#M000064","(path)","",2],["size","FakeFS::File::Stat","classes/FakeFS/File/Stat.html#M000096","()","",2],["size?","FakeFS::File","classes/FakeFS/File.html#M000065","(path)","",2],["split","FakeFS::File","classes/FakeFS/File.html#M000090","(path)","",2],["stat","FakeFS::File","classes/FakeFS/File.html#M000088","(file)","",2],["stat","FakeFS::File","classes/FakeFS/File.html#M000104","()","",2],["symlink","FakeFS::File","classes/FakeFS/File.html#M000087","(source, dest)","",2],["symlink?","FakeFS::File","classes/FakeFS/File.html#M000070","(path)","",2],["symlink?","FakeFS::File::Stat","classes/FakeFS/File/Stat.html#M000093","()","",2],["sysseek","FakeFS::File","classes/FakeFS/File.html#M000106","(position, whence = SEEK_SET)","",2],["tmpdir","FakeFS::Dir","classes/FakeFS/Dir.html#M000035","()","",2],["to_io","FakeFS::File","classes/FakeFS/File.html#M000107","()","",2],["to_path","FakeFS::File","classes/FakeFS/File.html#M000124","()","",2],["to_s","FakeFS::FakeDir","classes/FakeFS/FakeDir.html#M000023","()","",2],["to_s","FakeFS::FakeFile","classes/FakeFS/FakeFile.html#M000042","()","",2],["to_s","FakeFS::FakeSymlink","classes/FakeFS/FakeSymlink.html#M000050","()","",2],["to_s","FakeFS::Version","classes/FakeFS/Version.html#M000150","()","",2],["touch","FakeFS::FileUtils","classes/FakeFS/FileUtils.html#M000144","(list, options={})","",2],["unlink","FakeFS::FakeFile::Inode","classes/FakeFS/FakeFile/Inode.html#M000028","(file)","",2],["use_fakefs","FakeFS::SpecHelpers","classes/FakeFS/SpecHelpers.html#M000148","(describe_block)","",2],["utime","FakeFS::File","classes/FakeFS/File.html#M000059","(atime, mtime, *paths)","",2],["write_nonblock","FakeFS::File","classes/FakeFS/File.html#M000108","(string)","",2],["CONTRIBUTORS","files/CONTRIBUTORS.html","files/CONTRIBUTORS.html","","Scott Taylor <scott@railsnewbie.com> Pat Nakajima <patnakajima@gmail.com> Chris Wanstrath <chris@ozmm.org>",3],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2009 Chris Wanstrath  Permission is hereby granted, free of charge, to any person obtaining",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","FakeFS ======  Mocha is great. But when your library is all about manipulating the filesystem, you really",3],["fakefs.rb","files/lib/fakefs_rb.html","files/lib/fakefs_rb.html","","",3],["base.rb","files/lib/fakefs/base_rb.html","files/lib/fakefs/base_rb.html","","",3],["dir.rb","files/lib/fakefs/dir_rb.html","files/lib/fakefs/dir_rb.html","","",3],["dir.rb","files/lib/fakefs/fake/dir_rb.html","files/lib/fakefs/fake/dir_rb.html","","",3],["file.rb","files/lib/fakefs/fake/file_rb.html","files/lib/fakefs/fake/file_rb.html","","",3],["symlink.rb","files/lib/fakefs/fake/symlink_rb.html","files/lib/fakefs/fake/symlink_rb.html","","",3],["file.rb","files/lib/fakefs/file_rb.html","files/lib/fakefs/file_rb.html","","",3],["file_system.rb","files/lib/fakefs/file_system_rb.html","files/lib/fakefs/file_system_rb.html","","",3],["file_test.rb","files/lib/fakefs/file_test_rb.html","files/lib/fakefs/file_test_rb.html","","",3],["fileutils.rb","files/lib/fakefs/fileutils_rb.html","files/lib/fakefs/fileutils_rb.html","","",3],["safe.rb","files/lib/fakefs/safe_rb.html","files/lib/fakefs/safe_rb.html","","",3],["spec_helpers.rb","files/lib/fakefs/spec_helpers_rb.html","files/lib/fakefs/spec_helpers_rb.html","","FakeFS::SpecHelpers provides a simple macro for RSpec example groups to turn FakeFS on and off. To use",3],["version.rb","files/lib/fakefs/version_rb.html","files/lib/fakefs/version_rb.html","","",3]]}}